#Common
val.reference.data.retrieved.success = Reference data {0} retrieved successfully

#Login
val.username.or.password.invalid = Invalid username or password. Please try again
val.login.status.inactive.or.expected.reset = Your account is inactive or requires a password change. Please reset your password
val.password.expired.at.login.time = Your password has expired. Please set a new one
val.password.attempt.exceed = Too many incorrect password attempts. Please reset your password
val.authentication.success = You've successfully logged in
val.system.user.not.found.or.inactive = User not found or inactive in the system
val.system.user.role.inactive = User role is inactive
val.user.authorizer.pages.retrieved.success = Authorizer pages retrieved successfully
val.logout.success = You've been logged out successfully

#Section
val.section.filter.list.success = Section list filtered successfully
val.section.not.found.by.id = No section found with ID: {0}
val.section.found.by.id = Section found with ID: {0}
val.section.status.not.changing = Unable to update section status
val.section.update.success = Section updated successfully
val.section.delete.success = Section deleted successfully

#Page
val.page.filter.list.success = Page list filtered successfully
val.page.not.found.by.id = No page found with ID: {0}
val.page.found.by.id = Page found with ID: {0}
val.page.status.not.changing = Unable to update page status
val.page.update.success = Page updated successfully
val.page.delete.success = Page deleted successfully
val.web.page.not.found.or.inactive = Page not found or is inactive

#Task
val.task.filter.list.success = Task list filtered successfully
val.task.not.found.by.id = No task found with ID: {0}
val.task.found.by.id = Task found with ID: {0}
val.task.status.not.changing = Unable to update task status
val.task.update.success = Task updated successfully
val.task.delete.success = Task deleted successfully

#User role
val.web.user.role.not.found.or.inactive = User role not found or inactive

#Privilege
val.assigned.unassigned.task.retrieved.success = Assigned and unassigned tasks retrieved successfully
val.following.task.not.found.or.inactive = Task not found or inactive: {0}
val.privilege.assigned.success = Privileges assigned successfully

#System user
val.user.name.alreadyExist = The username "{0}" is already taken. Please choose a different one
val.user.added.success = User "{0}" added successfully
val.user.filter.list.success = User list filtered successfully
val.user.found.by.id = User found with ID: {0}
val.user.not.found.by.id = No user found with ID: {0}
val.user.values.not.changing = No changes detected in user data
val.user.update.success = User updated successfully
val.user.delete.success = User deleted successfully
val.password.reset.otp.sent.success = OTP sent successfully

#User name policy
val.username.max.length.invalid = Username is too long. Maximum length is {0} characters
val.username.min.length.invalid = Username is too short. Minimum length is {0} characters
val.username.upper.length.invalid = Username must include at least {0} uppercase letter(s)
val.username.lower.length.invalid = Username must include at least {0} lowercase letter(s)
val.username.number.length.invalid = Username must include at least {0} number(s)
val.username.special.length.invalid = Username must include at least {0} special character(s)
val.username.policy.notfound = Username policy is currently unavailable

#User role
val.user.role.filter.list.success = User roles filtered successfully
val.user.role.not.found.by.id = No user role found with ID: {0}
val.user.role.found.by.id = User role found with ID: {0}
val.user.role.values.not.changing = No changes detected in user role
val.user.role.update.success = User role updated successfully
val.user.role.delete.success = User role deleted successfully
val.user.role.code.already.exists = Role code "{0}" already exists
val.user.role.added.success = Role code "{0}" added successfully

#Web password policy
val.password.policy.not.found.by.id = No password policy found with ID: {0}
val.password.policy.not.found = Password policy not found
val.password.policy.found.by.id = Password policy found with ID: {0}
val.password.policy.values.not.changing = No changes detected in password policy
val.password.policy.update.success = Password policy updated successfully

#Web username policy
val.username.policy.not.found = Username policy not found
val.username.policy.not.found.by.id = No username policy found with ID: {0}
val.username.policy.found.by.id = Username policy found with ID: {0}
val.username.policy.values.not.changing = No changes detected in username policy
val.username.policy.update.success = Username policy updated successfully

#Reset Password
val.max.length.invalid = Password is too long. Maximum allowed is {0} characters
val.min.length.invalid = Password is too short. Minimum required is {0} characters
val.upper.length.invalid = Password must contain at least {0} uppercase letter(s)
val.lower.length.invalid = Password must contain at least {0} lowercase letter(s)
val.number.length.invalid = Password must contain at least {0} number(s)
val.special.length.invalid = Password must contain at least {0} special character(s)
val.password.policy.notfound = Password policy is currently unavailable
val.password.used.history = You?ve used this password before. Please choose a new one
val.password.reset.success = Your password has been reset successfully. You may now log in

#Category
val.category.filter.list.success = Category filter list successfully
val.category.code.already.exists = Category code {0} already exists
val.category.added.success = Category {0} added successfully
val.category.not.found.by.id = Category not found with ID {0}
val.category.found.by.id = Category found with ID {0}
val.category.values.not.changing = Category details not changing
val.category.update.success = Category {0} updated successfully
val.category.delete.success = Category {0} deleted successfully
val.category.code.not.found = Category code not found

#Brand
val.brand.filter.list.success = Brand filter list successfully
val.brand.code.already.exists = Brand code {0} already exists
val.brand.added.success = Brand {0} added successfully
val.brand.not.found.by.id = Brand not found with ID {0}
val.brand.found.by.id = Brand found with ID {0}
val.brand.values.not.changing = Brand details not changing
val.brand.update.success = Brand {0} updated successfully
val.brand.delete.success = Brand {0} deleted successfully
val.brand.code.not.found = Brand code not found

#Supplier
val.supplier.filter.list.success = Supplier filter list successfully
val.supplier.added.success = Supplier {0} added successfully
val.supplier.not.found.by.id = Supplier not found with ID {0}
val.supplier.found.by.id = Supplier found with ID {0}
val.supplier.values.not.changing = Supplier details not changing
val.supplier.update.success = Supplier {0} updated successfully
val.supplier.delete.success = Supplier {0} deleted successfully
val.supplier.payment.added.success=Supplier payment for {0} on GRN {1} added successfully.


#Loction
val.location.filter.list.success = Location filter list successfully
val.location.code.already.exists = Location code {0} already exists
val.location.added.success = Location {0} added successfully
val.location.not.found.by.id = Location not found with ID {0}
val.location.found.by.id = Location found with ID {0}
val.location.values.not.changing = Location details not changing
val.location.update.success = Location {0} updated successfully
val.location.delete.success = Location {0} deleted successfully

#Item
val.item.filter.list.success = Item filter list successfully
val.item.code.already.exists = Item code {0} already exists
val.item.added.success = Item {0} added successfully
val.item.not.found.by.id = Item not found with ID {0}
val.item.found.by.id = Item found with ID {0}
val.item.values.not.changing = Item details not changing
val.item.update.success = Item {0} updated successfully
val.item.delete.success = Item {0} deleted successfully
val.item.fetch.success = Latest item code retrieved successfully

#GRN
val.grn.filter.list.success = GRN filter list successfully
val.grn.added.success = GRN added successfully
val.item.wise.grn.retrieved.success = Item wise GRN retrieved successfully
val.item.code.missing = Item(s) missing {0} !Please check again

#Stock
val.stock.filter.list.success = Stock filter list successfully
val.stock.not.found.by.id = Stock not found with ID {0}
val.stock.found.by.id = Stock found with ID {0}
val.stock.values.not.changing = Stock details not changing
val.stock.update.success = Stock {0} updated successfully
val.stock.details.update.success = Stock details updated successfully
val.out.of.stock = Sorry!!! Out f stock
val.from.location.unavailable = From location unavailable this moment
val.to.location.unavailable = To location unavailable this moment
val.item.transfer.successful = Item transfer successfully
val.location.from.location.same = From location and to location can't be same

#Transfer
val.transfer.filter.list.success = Transfer filter list successfully
val.transfer.not.found.by.id = Transfer not found with ID {0}
val.transfer.found.by.id = Transfer found with ID {0}
val.transfer.cancel.success = Transfer cancel successfully
val.transfer.accepted.from.location = Can't cancel transfer.Received to location

#Cashier balance
val.cashier.balance.data.retrieved.success = Cashier balance retrieved successfully
val.cashier.balance.invoice.number.not.found = Invoice number not found {0}
val.cashier.balance.details.retrieved.success = Balance details retrieved successfully


